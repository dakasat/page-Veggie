/*
LESS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: @icon-home-width;
}

The large array-like variables contain all information about a single icon
@icon-home: x y offset_x offset_y width height total_width total_height image_path name;

At the bottom of this section, we provide information about the spritesheet itself
@spritesheet: width height image @spritesheet-sprites;
*/
@decoration-name: 'decoration';
@decoration-x: 0px;
@decoration-y: 0px;
@decoration-offset-x: 0px;
@decoration-offset-y: 0px;
@decoration-width: 253px;
@decoration-height: 33px;
@decoration-total-width: 253px;
@decoration-total-height: 63px;
@decoration-image: '../img/sprite-03438921400577777.png';
@decoration: 0px 0px 0px 0px 253px 33px 253px 63px '../img/sprite-03438921400577777.png' 'decoration';
@s-fb-name: 's-fb';
@s-fb-x: 29px;
@s-fb-y: 37px;
@s-fb-offset-x: -29px;
@s-fb-offset-y: -37px;
@s-fb-width: 11px;
@s-fb-height: 23px;
@s-fb-total-width: 253px;
@s-fb-total-height: 63px;
@s-fb-image: '../img/sprite-03438921400577777.png';
@s-fb: 29px 37px -29px -37px 11px 23px 253px 63px '../img/sprite-03438921400577777.png' 's-fb';
@s-ins-name: 's-ins';
@s-ins-x: 0px;
@s-ins-y: 37px;
@s-ins-offset-x: 0px;
@s-ins-offset-y: -37px;
@s-ins-width: 25px;
@s-ins-height: 26px;
@s-ins-total-width: 253px;
@s-ins-total-height: 63px;
@s-ins-image: '../img/sprite-03438921400577777.png';
@s-ins: 0px 37px 0px -37px 25px 26px 253px 63px '../img/sprite-03438921400577777.png' 's-ins';
@s-top-arrow-name: 's-top-arrow';
@s-top-arrow-x: 44px;
@s-top-arrow-y: 37px;
@s-top-arrow-offset-x: -44px;
@s-top-arrow-offset-y: -37px;
@s-top-arrow-width: 12px;
@s-top-arrow-height: 6px;
@s-top-arrow-total-width: 253px;
@s-top-arrow-total-height: 63px;
@s-top-arrow-image: '../img/sprite-03438921400577777.png';
@s-top-arrow: 44px 37px -44px -37px 12px 6px 253px 63px '../img/sprite-03438921400577777.png' 's-top-arrow';
@spritesheet-width: 253px;
@spritesheet-height: 63px;
@spritesheet-image: '../img/sprite-03438921400577777.png';
@spritesheet-sprites: @decoration @s-fb @s-ins @s-top-arrow;
@spritesheet: 253px 63px '../img/sprite-03438921400577777.png' @spritesheet-sprites;

/*
The provided classes are intended to be used with the array-like variables

.icon-home {
  .sprite-width(@icon-home);
}
.icon-email {
  .sprite(@icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
.sprite-width(@sprite) {
  width: extract(@sprite, 5);
}

.sprite-height(@sprite) {
  height: extract(@sprite, 6);
}

.sprite-position(@sprite) {
  @sprite-offset-x: extract(@sprite, 3);
  @sprite-offset-y: extract(@sprite, 4);
  background-position: @sprite-offset-x @sprite-offset-y;
}

.sprite-image(@sprite) {
  @sprite-image: extract(@sprite, 9);
  @sprite-image-bare: ~`"@{sprite-image}".slice(1, -1)`;
  background-image: url(@sprite-image-bare);
}

.sprite(@sprite) {
  .sprite-image(@sprite);
  .sprite-position(@sprite);
  .sprite-width(@sprite);
  .sprite-height(@sprite);
}

/*
The `.sprites` mixin generates identical output to the CSS template
  but can be overridden inside of LESS

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

.sprites(@spritesheet-sprites);
*/
.sprites(@sprites, @i: 1) when (@i <= length(@sprites)) {
  @sprite: extract(@sprites, @i);
  @sprite-name: e(extract(@sprite, 10));
  .@{sprite-name} {
    .sprite(@sprite);
  }
  .sprites(@sprites, @i + 1);
}
